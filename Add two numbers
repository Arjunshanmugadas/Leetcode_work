/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
      ListNode *next;
      ListNode() : val(0), next(nullptr) {}
      ListNode(int x) : val(x), next(nullptr) {}
      ListNode(int x, ListNode *next) : val(x), next(next) {}
  };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* head = new ListNode(0);
        ListNode* tail = head;
        int num1 = 0;
        int num2 = 0;
        int carry =0;
        while(l1 != nullptr||l2 != nullptr||carry !=0){
            num1 = (l1 !=nullptr) ? l1->val : 0;
            num2 = (l2 !=nullptr) ? l2->val : 0;
            int sum=(num1+num2+carry);
            carry = sum/10;
            ListNode* new_tail = new ListNode(sum%10);
            tail->next=new_tail;
            tail=tail->next;
            l1 = (l1 !=nullptr) ? l1->next : nullptr;
            l2 = (l2 !=nullptr) ? l2->next : nullptr;


        }
        ListNode* res = head->next;
        return res;
    }
};
